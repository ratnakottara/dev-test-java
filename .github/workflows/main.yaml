name: SonarQube-Scan, Build Docker, and Push to ECR

on:
  push:
    branches:
      - dev

jobs:
  sonarqube:
    name: SonarQube Trigger
    runs-on: ubuntu-latest  # Use Ubuntu runner

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: dev

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'
          architecture: x64
          check-latest: false
          server-id: github
          server-username: GITHUB_ACTOR
          server-password: GITHUB_TOKEN
          overwrite-settings: true
          job-status: success

      - name: Delete SonarQube cache
        run: |
          if [ -d $HOME/.sonar ]; then
            rm -rf $HOME/.sonar
          fi

      - name: SonarQube Scan
        run: |
          # Download and unzip SonarScanner 5
          curl -sSL "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.0.2966-windows.zip" -o sonar-scanner.zip
          unzip sonar-scanner.zip
          # Configure SonarScanner properties (adjust as needed)
          echo "sonar.host.url=${{ secrets.SONAR_HOST_URL }}" >> sonar-scanner-5.0.0.2966-windows/conf/sonar-scanner.properties
          echo "sonar.login=${{ secrets.SONAR_TOKEN }}" >> sonar-scanner-5.0.0.2966-windows/conf/sonar-scanner.properties
          echo "sonar.projectKey=sample" >> sonar-scanner-5.0.0.2966-windows/conf/sonar-scanner.properties
          # Run SonarScanner
          sonar-scanner-5.0.0.2966-windows/bin/sonar-scanner.bat

      - name: Change to repository root
        run: cd $GITHUB_WORKSPACE

      - name: Compile Java code and create JAR
        run: |
         # Compile your Java code
         javac HelloWorld.java
         # Create a JAR file
         jar cfe HelloWorld.jar HelloWorld HelloWorld.class

      - name: Save JAR as Artifact
        uses: actions/upload-artifact@v2
        with:
         name: HelloWorld-JAR  # Name of the artifact
         path: HelloWorld.jar

  build:
    name: Build and Push Docker Image
    needs: sonarqube
    runs-on: ubuntu-latest  # Use Ubuntu runner

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download JAR Artifact
        uses: actions/download-artifact@v2
        with:
          name: HelloWorld-JAR  # Name of the artifact
          path: .  # Destination path in the workspace

      - name: Set up Docker
        uses: actions/setup-docker@v2
        with:
          docker-version: '20.10.0'  # You can specify your desired Docker version

      - name: Build Docker image
        run: docker build -t my-java-app .

      - name: Push Docker image to ECR
        run: |
          docker tag my-java-app:latest 390067525135.dkr.ecr.ap-south-1.amazonaws.com/my-java-app:latest
          docker push 390067525135.dkr.ecr.ap-south-1.amazonaws.com/my-java-app:latest

      - name: Sign Docker image with Cosign
        run: |
          docker pull 390067525135.dkr.ecr.ap-south-1.amazonaws.com/my-java-app:latest
          cosign sign -key cosign.key 390067525135.dkr.ecr.ap-south-1.amazonaws.com/my-java-app:latest
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}

      - name: Save JAR as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: HelloWorld-JAR
          path: HelloWorld.jar
